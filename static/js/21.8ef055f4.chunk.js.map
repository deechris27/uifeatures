{"version":3,"sources":["components/pdfdownload/PdfDownload.js"],"names":["PdfDownload","pdfRef","useRef","useState","firstName","lastName","email","state","setState","handleChange","e","persist","prevState","target","name","value","Fragment","style","textAlign","className","ref","onSubmit","doc","jsPDF","text","autoPrint","output","save","type","placeholder","onChange","required","onClick","window","print"],"mappings":"6MAkHeA,UA7Gf,WAEI,IAAMC,EAASC,mBAFI,EAIOC,mBAAS,CAACC,UAAW,GAAIC,SAAU,GAAIC,MAAO,KAJrD,mBAIZC,EAJY,KAILC,EAJK,KA0EbC,EAAe,SAACC,GAClBA,EAAEC,UACFH,GAAS,SAAAI,GAAS,kCACXA,GADW,kBAEbF,EAAEG,OAAOC,KAAQJ,EAAEG,OAAOE,YAQnC,OACI,kBAAC,IAAMC,SAAP,KACI,wBAAIC,MAAO,CAAEC,UAAW,WAAxB,0BACA,yBAAKC,UAAU,QAAQC,IAAKnB,GAExB,0BAAMoB,SApCG,WASjB,IAAIC,EAAM,IAAIC,IAEdD,EAAIE,KAAJ,sBAAwBjB,EAAMH,WAAa,GAAI,IAC/CkB,EAAIE,KAAJ,qBAAuBjB,EAAMF,UAAY,GAAI,IAC7CiB,EAAIE,KAAJ,kBAAoBjB,EAAMD,OAAS,GAAI,IACvCgB,EAAIG,YACJH,EAAII,OAAO,oBACXJ,EAAIK,KAAK,kBAqBG,6CACA,2BAAOC,KAAK,OAAOT,UAAU,QAAQL,KAAK,YAAYe,YAAY,eAAeC,SAAUrB,EAAcsB,UAAQ,IAEjH,4CACA,2BAAOH,KAAK,OAAOT,UAAU,QAAQL,KAAK,WAAWe,YAAY,cAAcC,SAAUrB,EAAcsB,UAAQ,IAE/G,iDACA,2BAAOH,KAAK,QAAQT,UAAU,QAAQL,KAAK,QAAQe,YAAY,UAAUC,SAAUrB,EAAcsB,UAAQ,IAEzG,2BAAOH,KAAK,SAAST,UAAU,UAAUJ,MAAM,eAC/C,4BAAQI,UAAU,UAAUa,QApBxB,WAChBC,OAAOC,UAmBK","file":"static/js/21.8ef055f4.chunk.js","sourcesContent":["import React, { useRef, useState } from 'react';\r\nimport './pdf.css';\r\nimport html2canvas from 'html2canvas';\r\nimport jsPDF from 'jspdf';\r\n\r\nfunction PdfDownload() {\r\n\r\n    const pdfRef = useRef();\r\n\r\n    const [state, setState] = useState({firstName: \"\", lastName: \"\", email: \"\"});\r\n\r\n//     html2canvas(quotes, {\r\n//         onrendered: function(canvas) {\r\n\r\n//         //! MAKE YOUR PDF\r\n//         let pdf = new jsPDF('p', 'pt', 'letter');\r\n\r\n//         for (let i = 0; i <= quotes.clientHeight/980; i++) {\r\n//             //! This is all just html2canvas stuff\r\n//             let srcImg  = canvas;\r\n//             let sX      = 0;\r\n//             let sY      = 980*i; // start 980 pixels down for every new page\r\n//             let sWidth  = 900;\r\n//             let sHeight = 980;\r\n//             let dX      = 0;\r\n//             let dY      = 0;\r\n//             let dWidth  = 900;\r\n//             let dHeight = 980;\r\n\r\n//             window.onePageCanvas = document.createElement(\"canvas\");\r\n//             onePageCanvas.setAttribute('width', 900);\r\n//             onePageCanvas.setAttribute('height', 980);\r\n//             let ctx = onePageCanvas.getContext('2d');\r\n//             // details on this usage of this function: \r\n//             // https://developer.mozilla.org/en-US/docs/Web/API/Canvas_API/Tutorial/Using_images#Slicing\r\n//             ctx.drawImage(srcImg,sX,sY,sWidth,sHeight,dX,dY,dWidth,dHeight);\r\n\r\n//             // document.body.appendChild(canvas);\r\n//             let canvasDataURL = onePageCanvas.toDataURL(\"image/png\", 1.0);\r\n\r\n//             let width         = onePageCanvas.width;\r\n//             let height        = onePageCanvas.clientHeight;\r\n\r\n//             //! If we're on anything other than the first page,\r\n//             // add another page\r\n//             if (i > 0) {\r\n//                 pdf.addPage(612, 791); //8.5\" x 11\" in pts (in*72)\r\n//             }\r\n//             //! now we declare that we're working on that page\r\n//             pdf.setPage(i+1);\r\n//             //! now we add content to that page!\r\n//             pdf.addImage(canvasDataURL, 'PNG', 20, 40, (width*.62), (height*.62));\r\n\r\n//         }\r\n//         //! after the for loop is finished running, we save the pdf.\r\n//         pdf.save('test.pdf');\r\n//     }\r\n//   });\r\n// }\r\n\r\n    const handleSubmit = () => {\r\n        //  html2canvas(pdfRef.current)\r\n        //  .then(canvas=>{\r\n        //      const pdfData = canvas.toDataURL('image/png');\r\n        //      const pdf = new jsPDF();\r\n        //      pdf.addImage(pdfData, 'JPEG', 0, 0);\r\n        //      pdf.output(\"dataurlnewwindow\");\r\n        //      pdf.save(\"mytidbit.pdf\");\r\n        //  })\r\n        let doc = new jsPDF()\r\n\r\n        doc.text(`FirstName:  ${state.firstName}`, 10, 10);\r\n        doc.text(`LastName:  ${state.lastName}`, 10, 20);\r\n        doc.text(`Email:  ${state.email}`, 10, 30);\r\n        doc.autoPrint();\r\n        doc.output(\"dataurlnewwindow\");\r\n        doc.save('mytidbit.pdf')\r\n    };\r\n\r\n    const handleChange = (e) => {\r\n        e.persist();\r\n        setState(prevState=>({\r\n            ...prevState,\r\n            [e.target.name] : e.target.value\r\n        }))\r\n    };\r\n\r\n    const buttonClick = () => {\r\n        window.print();\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <h1 style={{ textAlign: 'center' }}>Mytidbit PDF Generator</h1>\r\n            <div className=\"main2\" ref={pdfRef}>\r\n                {/* <p contentEditable=\"true\">Edit this line of text with what you want...!</p> */}\r\n                <form onSubmit={handleSubmit}>\r\n                    <label>FirstName:</label>\r\n                    <input type=\"text\" className=\"name2\" name=\"firstName\" placeholder=\"First name..\" onChange={handleChange} required />\r\n\r\n                    <label>LastName:</label>\r\n                    <input type=\"text\" className=\"name2\" name=\"lastName\" placeholder=\"Last name..\" onChange={handleChange} required />\r\n\r\n                    <label>Email Address:</label>\r\n                    <input type=\"email\" className=\"name2\" name=\"email\" placeholder=\"Email..\" onChange={handleChange} required />\r\n\r\n                    <input type=\"submit\" className=\"submity\" value=\"Create Pdf\" />\r\n                    <button className=\"submity\" onClick={buttonClick}>Download the entire page</button>\r\n                </form>\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default PdfDownload\r\n"],"sourceRoot":""}