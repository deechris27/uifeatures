{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","components/dropdownFilter/DropDownFilter.js"],"names":["_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","Object","from","unsupportedIterableToArray","TypeError","DropDownFilter","useState","options","setOptions","baseOptions","filterInput","useRef","show","setShow","deBounce","setDebounce","handleReset","_","debounceKeyUp","useCallback","fn","delay","timeId","args","clearTimeout","setTimeout","debounce","e","persist","filteredOptions","filter","opt","toLowerCase","includes","target","value","throttleKeyUp","last","now","Date","getTime","throttle","className","onClick","type","ref","placeholder","onKeyUp","keyCode","current","style","position","bottom","left","map","i","key"],"mappings":"qIAIe,SAASA,EAAmBC,GACzC,OCJa,SAA4BA,GACzC,GAAIC,MAAMC,QAAQF,GAAM,OAAO,OAAAG,EAAA,GAAiBH,GDGzC,CAAkBA,IELZ,SAA0BI,GACvC,GAAsB,qBAAXC,QAA0BA,OAAOC,YAAYC,OAAOH,GAAO,OAAOH,MAAMO,KAAKJ,GFIvD,CAAgBJ,IAAQ,OAAAS,EAAA,GAA2BT,IGLvE,WACb,MAAM,IAAIU,UAAU,wIHIwE,G,kCIuF/EC,UAzFf,WAA2B,IAAD,EAEQC,mBAAS,CAAC,WAAY,SAAU,SAAU,QAAS,UAAW,SAFtE,mBAEfC,EAFe,KAENC,EAFM,OAIgBF,mBAASC,GAJzB,mBAIfE,EAJe,KAMhBC,GANgB,KAMFC,oBANE,EAQEL,oBAAS,GARX,mBAQfM,EARe,KAQTC,EARS,OAUUP,oBAAS,GAVnB,mBAUfQ,EAVe,KAULC,EAVK,KAuCfC,EAAc,SAAAC,GAChBT,EAAWC,IAGVS,EAAgBC,sBA/BL,SAACC,EAAGC,GACjB,IAAIC,EACJ,OAAO,WAAkB,IAAD,uBAALC,EAAK,yBAALA,EAAK,gBACjBD,GACCE,aAAaF,GAGjBA,EAASG,YAAW,WAChBL,EAAE,WAAF,EAAMG,KACPF,IAsBuBK,EAAS,SAACC,GACxCA,EAAEC,UACF,IACIC,EADa,EAAOtB,GACUuB,QAAO,SAAAC,GAAG,OAAEA,EAAIC,cAAcC,SAASN,EAAEO,OAAOC,MAAMH,kBACxFxB,EAAWqB,KACZ,MAEGO,EAAgBjB,sBAzBtB,SAAkBC,EAAIC,GAClB,IAAIgB,EAAO,EAEX,OAAO,WACN,IAAMC,GAAM,IAAIC,MAAOC,UACvB,KAAGF,EAAID,EAAOhB,GAKb,OADAgB,EAAOC,EACAlB,EAAE,WAAF,cAeqBqB,EAAS,SAACd,GACvCA,EAAEC,UACF,IACIC,EADa,EAAOtB,GACUuB,QAAO,SAAAC,GAAG,OAAEA,EAAIC,cAAcC,SAASN,EAAEO,OAAOC,MAAMH,kBACxFxB,EAAWqB,KACb,MAmBH,OACI,yBAAKa,UAAU,YACX,4BAAQA,UAAU,UAAUC,QANf,WACjB5B,GAAaD,KAKT,sBAA8E,6BAC9E,4BAAQ6B,QAXM,WACjB9B,GAASD,IAU0B8B,UAAU,WAAW5B,EAAW,WAAa,WAA7E,IAAyF,uBAAG4B,UAAU,kBACtG,yBAAKA,UAAS,2BAAsB9B,EAAO,OAAS,SAChD,2BAAOgC,KAAK,OAAOC,IAAKnC,EAAaoC,YAAahC,EAAW,kBAAoB,kBAAmB4B,UAAU,eAAeK,QAtBlH,SAAApB,GACnBA,EAAEC,UACCd,EACc,IAAZa,EAAEqB,SAA2B,KAAZrB,EAAEqB,SAA+C,KAA9BtC,EAAYuC,QAAQd,MAA+BjB,EAAcS,GAA9BX,IAE3D,IAAZW,EAAEqB,SAA2B,KAAZrB,EAAEqB,SAA+C,KAA9BtC,EAAYuC,QAAQd,MAA+BC,EAAcT,GAA9BX,OAkBpE,uBAAG0B,UAAU,qBAAqBQ,MAAO,CAACC,SAAU,WAAYC,OAAQ,OAAQC,KAAM,SACrF9C,EAAQ+C,KAAI,SAACvB,EAAKwB,GAAN,OACT,uBAAGC,IAAKD,GAAIxB,U","file":"static/js/9.3d753728.chunk.js","sourcesContent":["import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React, {useState, useCallback, useRef} from 'react';\r\nimport './dropdownfilter.css';\r\n\r\nfunction DropDownFilter() {\r\n\r\n    const [options, setOptions] = useState(['Mytidbit', 'Deepak', 'Wassup', 'Deeps', 'Maolins', 'Test']);\r\n\r\n    const [baseOptions, setBaseOptions] = useState(options);\r\n\r\n    const filterInput = useRef();\r\n\r\n    const [show, setShow] = useState(false);\r\n\r\n    const [deBounce, setDebounce] = useState(true);\r\n\r\n    const debounce = (fn,delay) => {\r\n        let timeId;\r\n        return function(...args){\r\n            if(timeId){\r\n                clearTimeout(timeId);\r\n            }\r\n    \r\n            timeId = setTimeout(()=>{\r\n                fn(...args);\r\n            }, delay);\r\n        }\r\n    };\r\n\r\n    function throttle(fn, delay){\r\n        let last = 0;\r\n     \r\n        return (...args)=>{\r\n         const now = new Date().getTime();\r\n         if(now-last < delay){\r\n             return;\r\n         }\r\n          \r\n          last = now;\r\n          return fn(...args);\r\n        }\r\n     }\r\n\r\n     const handleReset = _=> {\r\n         setOptions(baseOptions)\r\n     };\r\n\r\n    const debounceKeyUp = useCallback(debounce((e) => {\r\n        e.persist();\r\n        const optionsCopy = [...options];\r\n        let filteredOptions = optionsCopy.filter(opt=>opt.toLowerCase().includes(e.target.value.toLowerCase()));\r\n        setOptions(filteredOptions);   \r\n    }, 2000));\r\n\r\n    const throttleKeyUp = useCallback(throttle((e)=>{\r\n         e.persist();\r\n         const optionsCopy = [...options];\r\n         let filteredOptions = optionsCopy.filter(opt=>opt.toLowerCase().includes(e.target.value.toLowerCase()));\r\n         setOptions(filteredOptions);  \r\n    }, 2000));\r\n\r\n    const handleKeyPress = e => {\r\n        e.persist();\r\n        if(deBounce){\r\n            (e.keyCode===8 || e.keyCode===46) && filterInput.current.value === \"\" ? handleReset() : debounceKeyUp(e)\r\n        }else{\r\n            (e.keyCode===8 || e.keyCode===46) && filterInput.current.value === \"\" ? handleReset() : throttleKeyUp(e)\r\n        }\r\n    };\r\n\r\n    const displayFilter = () => {\r\n         setShow(!show);\r\n    };\r\n\r\n    const toggleFilter = ()=>{\r\n        setDebounce(!deBounce)\r\n    };\r\n\r\n    return (\r\n        <div className=\"dropdown\">\r\n            <button className=\"dropbtn\" onClick={toggleFilter}>Change Filter Type</button><br/>\r\n            <button onClick={displayFilter} className=\"dropbtn\">{deBounce ? \"DeBounce\" : \"Throttle\"} <i className=\"arroww downn\"></i></button>\r\n            <div className={`dropdown-content ${show ? \"show\" : \"hide\"}`}>\r\n                <input type=\"text\" ref={filterInput} placeholder={deBounce ? \"Try Debounce...\" : \"Try Throttle...\"} className=\"filter-input\" onKeyUp={handleKeyPress} />\r\n                <i className=\"fa fa-fw fa-search\" style={{position: 'relative', bottom: '34px', left: '5px'}}></i>\r\n                {options.map((opt, i)=>(\r\n                    <a key={i}>{opt}</a>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DropDownFilter;\r\n"],"sourceRoot":""}