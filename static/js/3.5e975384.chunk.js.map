{"version":3,"sources":["components/autocomplete/countries.js","components/autocomplete/AutoComplete.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js"],"names":["countries","AutoComplete","useState","inputVal","suggestions","selectedCountry","prompty","state","setState","handleKeyDown","e","persist","filteredCountries","filter","item","toLowerCase","indexOf","target","value","prevState","suggestedList","className","map","country","key","onClick","handleCountrySelect","style","textAlign","color","position","left","autoComplete","action","type","placeholder","onKeyDown","onChange","formattedCountries","includes","forEach","replace","console","log","window","location","_defineProperty","obj","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","i","arguments","length","source","getOwnPropertyDescriptors","defineProperties"],"mappings":"iJAAaA,EAAY,CAAC,cAAe,UAAW,UAAW,UAAW,SAAU,WAAY,oBAAqB,YAAa,UAAW,QAAS,YAAa,UAAW,aAAc,UAAW,UAAW,aAAc,WAAY,UAAW,UAAW,SAAU,QAAS,UAAW,SAAU,UAAW,uBAAwB,WAAY,SAAU,yBAA0B,SAAU,WAAY,eAAgB,UAAW,WAAY,WAAY,SAAU,aAAc,iBAAkB,4BAA6B,OAAQ,QAAS,QAAS,WAAY,QAAS,eAAgB,aAAc,gBAAiB,UAAW,OAAQ,UAAW,SAAU,iBAAkB,UAAW,WAAY,WAAY,qBAAsB,UAAW,QAAS,cAAe,oBAAqB,UAAW,UAAW,WAAY,mBAAoB,gBAAiB,OAAQ,UAAW,SAAU,mBAAoB,qBAAsB,QAAS,SAAU,UAAW,UAAW,QAAS,YAAa,SAAU,YAAa,UAAW,OAAQ,YAAa,WAAY,SAAU,gBAAiB,SAAU,QAAS,WAAY,YAAa,UAAW,UAAW,QAAS,YAAa,OAAQ,OAAQ,UAAW,cAAe,SAAU,QAAS,UAAW,QAAS,SAAU,SAAU,aAAc,QAAS,WAAY,SAAU,SAAU,aAAc,OAAQ,SAAU,UAAW,UAAW,UAAW,QAAS,gBAAiB,YAAa,aAAc,QAAS,YAAa,aAAc,SAAU,WAAY,WAAY,OAAQ,QAAS,mBAAoB,aAAc,YAAa,SAAU,aAAc,UAAW,SAAU,WAAY,aAAc,aAAc,UAAW,aAAc,UAAW,UAAW,QAAS,QAAS,cAAe,uBAAwB,gBAAiB,cAAe,YAAa,QAAS,UAAW,cAAe,SAAU,OAAQ,WAAY,QAAS,YAAa,SAAU,mBAAoB,WAAY,OAAQ,cAAe,SAAU,WAAY,cAAe,QAAS,UAAW,UAAW,SAAU,SAAU,0BAA2B,QAAS,aAAc,wBAAyB,eAAgB,UAAW,SAAU,aAAc,eAAgB,YAAa,WAAY,WAAY,kBAAmB,UAAW,eAAgB,cAAe,cAAe,QAAS,YAAa,mBAAoB,WAAY,aAAc,QAAS,WAAY,YAAa,SAAU,cAAe,QAAS,SAAU,aAAc,WAAY,WAAY,eAAgB,OAAQ,QAAS,oBAAqB,UAAW,SAAU,eAAgB,iBAAkB,SAAU,SAAU,UAAW,uBAAwB,iBAAkB,2BAA4B,UAAW,aAAc,UAAW,eAAgB,YAAa,UAAW,sBAAuB,QAAS,SAAU,Y,MCiF3vFC,UA7Ef,WAAyB,IAAD,EAEMC,mBAAS,CAACC,SAAS,GAAIC,YAAY,GAAIC,gBAAiB,GAAIC,SAAS,IAF3E,mBAEbC,EAFa,KAENC,EAFM,KAIdC,EAAgB,SAACC,GACnBA,EAAEC,UACF,IAAIC,EAAoBZ,EAAUa,QAAO,SAAAC,GAAI,OAAkE,IAA9DA,EAAKC,cAAcC,QAAQN,EAAEO,OAAOC,MAAMH,kBAC3FP,GAAS,SAAAW,GAAS,kCACXA,GADW,IAEdhB,SAAUO,EAAEO,OAAOC,MACnBd,YAAaQ,QAuCjBQ,EAAgBb,EAAMH,aAClB,yBAAKiB,UAAU,sBACVd,EAAMH,YAAYkB,KAAI,SAAAC,GACpB,OAAO,yBAAKC,IAAKD,EAASE,QAAS,kBAtCtB,SAACF,GACxBf,GAAS,SAAAW,GAAS,kCACXA,GADW,IAEdhB,SAAUoB,EACVjB,SAAS,EACTF,YAAa,QAiCgCsB,CAAoBH,IAAUF,UAAU,2BAA2BE,OAIzH,OACI,6BACI,wBAAII,MAAO,CAACC,UAAU,WAAtB,4EACA,uBAAGD,MAAO,CAACE,MAAM,MAAOC,SAAS,WAAYC,KAAK,SAAUxB,EAAMD,QAAU,mCAAqC,IACjH,0BAAM0B,aAAa,MAAMC,OAAO,IAC5B,yBAAKZ,UAAU,gBACX,2BACCa,KAAK,OACLb,UAAU,cACVc,YAAY,mBACZC,UAAW3B,EACX4B,SA5CM,SAAC3B,GAEpB,IAAI4B,EADJ7B,EAAcC,GAIXH,EAAMH,YAAYmC,SAAS7B,EAAEO,OAAOC,SACnCoB,EAAqB/B,EAAMH,YAAYoC,SAAQ,SAAA1B,GAC3CA,EAAK2B,QAAQlC,EAAMJ,SAAU,gCAASI,EAAMJ,cAGhDuC,QAAQC,IAAIL,GACZ9B,GAAS,SAAAW,GAAS,kCACXA,GADW,IAEdf,YAAakC,SAgCRpB,MAAOX,EAAMJ,YACZ,6BACLI,EAAMJ,UAAYiB,EACnB,2BAAOc,KAAK,SAASb,UAAU,UAAUI,QA9BhC,WACjBlB,EAAMJ,SAAWyC,OAAOC,SAASJ,QAAQ,2BAA8BjC,GAAS,SAAAW,GAAS,kCAClFA,GADkF,IAErFb,SAAS,c,gCChDN,SAASwC,EAAgBC,EAAKvB,EAAKN,GAYhD,OAXIM,KAAOuB,EACTC,OAAOC,eAAeF,EAAKvB,EAAK,CAC9BN,MAAOA,EACPgC,YAAY,EACZC,cAAc,EACdC,UAAU,IAGZL,EAAIvB,GAAON,EAGN6B,EAZT,mC,gCCAA,8CAEA,SAASM,EAAQC,EAAQC,GACvB,IAAIC,EAAOR,OAAOQ,KAAKF,GAEvB,GAAIN,OAAOS,sBAAuB,CAChC,IAAIC,EAAUV,OAAOS,sBAAsBH,GACvCC,IAAgBG,EAAUA,EAAQ7C,QAAO,SAAU8C,GACrD,OAAOX,OAAOY,yBAAyBN,EAAQK,GAAKT,eAEtDM,EAAKK,KAAKC,MAAMN,EAAME,GAGxB,OAAOF,EAGM,SAASO,EAAe9C,GACrC,IAAK,IAAI+C,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CACzC,IAAIG,EAAyB,MAAhBF,UAAUD,GAAaC,UAAUD,GAAK,GAE/CA,EAAI,EACNX,EAAQL,OAAOmB,IAAS,GAAM3B,SAAQ,SAAUhB,GAC9C,YAAeP,EAAQO,EAAK2C,EAAO3C,OAE5BwB,OAAOoB,0BAChBpB,OAAOqB,iBAAiBpD,EAAQ+B,OAAOoB,0BAA0BD,IAEjEd,EAAQL,OAAOmB,IAAS3B,SAAQ,SAAUhB,GACxCwB,OAAOC,eAAehC,EAAQO,EAAKwB,OAAOY,yBAAyBO,EAAQ3C,OAKjF,OAAOP,I","file":"static/js/3.5e975384.chunk.js","sourcesContent":["export const countries = [\"Afghanistan\", \"Albania\", \"Algeria\", \"Andorra\", \"Angola\", \"Anguilla\", \"Antigua & Barbuda\", \"Argentina\", \"Armenia\", \"Aruba\", \"Australia\", \"Austria\", \"Azerbaijan\", \"Bahamas\", \"Bahrain\", \"Bangladesh\", \"Barbados\", \"Belarus\", \"Belgium\", \"Belize\", \"Benin\", \"Bermuda\", \"Bhutan\", \"Bolivia\", \"Bosnia & Herzegovina\", \"Botswana\", \"Brazil\", \"British Virgin Islands\", \"Brunei\", \"Bulgaria\", \"Burkina Faso\", \"Burundi\", \"Cambodia\", \"Cameroon\", \"Canada\", \"Cape Verde\", \"Cayman Islands\", \"Central Arfrican Republic\", \"Chad\", \"Chile\", \"China\", \"Colombia\", \"Congo\", \"Cook Islands\", \"Costa Rica\", \"Cote D Ivoire\", \"Croatia\", \"Cuba\", \"Curacao\", \"Cyprus\", \"Czech Republic\", \"Denmark\", \"Djibouti\", \"Dominica\", \"Dominican Republic\", \"Ecuador\", \"Egypt\", \"El Salvador\", \"Equatorial Guinea\", \"Eritrea\", \"Estonia\", \"Ethiopia\", \"Falkland Islands\", \"Faroe Islands\", \"Fiji\", \"Finland\", \"France\", \"French Polynesia\", \"French West Indies\", \"Gabon\", \"Gambia\", \"Georgia\", \"Germany\", \"Ghana\", \"Gibraltar\", \"Greece\", \"Greenland\", \"Grenada\", \"Guam\", \"Guatemala\", \"Guernsey\", \"Guinea\", \"Guinea Bissau\", \"Guyana\", \"Haiti\", \"Honduras\", \"Hong Kong\", \"Hungary\", \"Iceland\", \"India\", \"Indonesia\", \"Iran\", \"Iraq\", \"Ireland\", \"Isle of Man\", \"Israel\", \"Italy\", \"Jamaica\", \"Japan\", \"Jersey\", \"Jordan\", \"Kazakhstan\", \"Kenya\", \"Kiribati\", \"Kosovo\", \"Kuwait\", \"Kyrgyzstan\", \"Laos\", \"Latvia\", \"Lebanon\", \"Lesotho\", \"Liberia\", \"Libya\", \"Liechtenstein\", \"Lithuania\", \"Luxembourg\", \"Macau\", \"Macedonia\", \"Madagascar\", \"Malawi\", \"Malaysia\", \"Maldives\", \"Mali\", \"Malta\", \"Marshall Islands\", \"Mauritania\", \"Mauritius\", \"Mexico\", \"Micronesia\", \"Moldova\", \"Monaco\", \"Mongolia\", \"Montenegro\", \"Montserrat\", \"Morocco\", \"Mozambique\", \"Myanmar\", \"Namibia\", \"Nauro\", \"Nepal\", \"Netherlands\", \"Netherlands Antilles\", \"New Caledonia\", \"New Zealand\", \"Nicaragua\", \"Niger\", \"Nigeria\", \"North Korea\", \"Norway\", \"Oman\", \"Pakistan\", \"Palau\", \"Palestine\", \"Panama\", \"Papua New Guinea\", \"Paraguay\", \"Peru\", \"Philippines\", \"Poland\", \"Portugal\", \"Puerto Rico\", \"Qatar\", \"Reunion\", \"Romania\", \"Russia\", \"Rwanda\", \"Saint Pierre & Miquelon\", \"Samoa\", \"San Marino\", \"Sao Tome and Principe\", \"Saudi Arabia\", \"Senegal\", \"Serbia\", \"Seychelles\", \"Sierra Leone\", \"Singapore\", \"Slovakia\", \"Slovenia\", \"Solomon Islands\", \"Somalia\", \"South Africa\", \"South Korea\", \"South Sudan\", \"Spain\", \"Sri Lanka\", \"St Kitts & Nevis\", \"St Lucia\", \"St Vincent\", \"Sudan\", \"Suriname\", \"Swaziland\", \"Sweden\", \"Switzerland\", \"Syria\", \"Taiwan\", \"Tajikistan\", \"Tanzania\", \"Thailand\", \"Timor L'Este\", \"Togo\", \"Tonga\", \"Trinidad & Tobago\", \"Tunisia\", \"Turkey\", \"Turkmenistan\", \"Turks & Caicos\", \"Tuvalu\", \"Uganda\", \"Ukraine\", \"United Arab Emirates\", \"United Kingdom\", \"United States of America\", \"Uruguay\", \"Uzbekistan\", \"Vanuatu\", \"Vatican City\", \"Venezuela\", \"Vietnam\", \"Virgin Islands (US)\", \"Yemen\", \"Zambia\", \"Zimbabwe\"];","import React, {useState} from 'react';\r\nimport {countries} from './countries';\r\nimport './autocomplete.css';\r\n\r\nfunction AutoComplete() {\r\n\r\n    const [state, setState] = useState({inputVal:\"\", suggestions:[], selectedCountry: \"\", prompty: false})\r\n\r\n    const handleKeyDown = (e)=>{\r\n        e.persist();\r\n        let filteredCountries = countries.filter(item => item.toLowerCase().indexOf(e.target.value.toLowerCase()) !== -1);\r\n        setState(prevState=>({\r\n            ...prevState,\r\n            inputVal: e.target.value,\r\n            suggestions: filteredCountries\r\n        }))\r\n    };\r\n\r\n    const handleCountrySelect = (country) => {\r\n         setState(prevState=>({\r\n             ...prevState,\r\n             inputVal: country,\r\n             prompty: false,\r\n             suggestions: []\r\n         }))\r\n    };\r\n\r\n    const handleOnChange = (e) =>{\r\n        handleKeyDown(e);\r\n        let formattedCountries;\r\n\r\n        //not working\r\n        if(state.suggestions.includes(e.target.value)){\r\n            formattedCountries = state.suggestions.forEach(item=>{\r\n                item.replace(state.inputVal, <strong>{state.inputVal}</strong>)\r\n            })\r\n\r\n            console.log(formattedCountries);\r\n            setState(prevState=>({\r\n                ...prevState,\r\n                suggestions: formattedCountries\r\n            }))\r\n        }\r\n    };\r\n\r\n    const handleSubmit = () => {\r\n        state.inputVal ? window.location.replace(\"http://www.tidbit.c.la/\") :  setState(prevState=>({\r\n            ...prevState,\r\n            prompty: true\r\n        }))\r\n    };\r\n\r\n    let formattedCountries;\r\n    let suggestedList = state.suggestions && \r\n            <div className=\"autocomplete-items\">\r\n                {state.suggestions.map(country=>{\r\n                   return <div key={country} onClick={()=>handleCountrySelect(country)} className=\"autocomplete-items-item\">{country}</div>\r\n                })}\r\n            </div>;\r\n\r\n    return (\r\n        <div >\r\n            <h3 style={{textAlign:'center'}}>Mytidbit Autocomplete - Search for a country and select from suggestions</h3>\r\n            <p style={{color:'red', position:'relative', left:'50px'}}>{state.prompty ? \"Select a country and then submit\" : \"\"}</p>\r\n            <form autoComplete=\"off\" action=\"\">\r\n                <div className=\"autocomplete\">\r\n                    <input\r\n                     type=\"text\"\r\n                     className=\"inputt-text\"\r\n                     placeholder=\"Country name....\"\r\n                     onKeyDown={handleKeyDown}\r\n                     onChange={handleOnChange}\r\n                     value={state.inputVal} />\r\n                </div><br />\r\n                {state.inputVal && suggestedList}\r\n                <input type=\"submit\" className=\"summit2\" onClick={handleSubmit}/>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AutoComplete\r\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}"],"sourceRoot":""}