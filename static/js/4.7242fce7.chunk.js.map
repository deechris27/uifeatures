{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","components/formvalidation/FormValidation.js"],"names":["_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties","FormValidation","timerId","useState","userName","password","errors","uname","pwd","email","state","setState","errorMessage","setErrorMessage","successMessage","setSuccessMessage","emailRegex","RegExp","useEffect","clearTimeout","handleChange","e","preventDefault","name","test","prevState","Fragment","style","textAlign","className","color","fontWeight","onSubmit","valid","values","val","isformValid","setTimeout","window","location","replace","noValidate","type","placeholder","onChange","id"],"mappings":"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","file":"static/js/4.7242fce7.chunk.js","sourcesContent":["export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","import React, {useState, useEffect} from 'react';\r\nimport './formvalidation.css';\r\n\r\nfunction FormValidation() {\r\n\r\n    const [state, setState] = useState({userName: null, password: null, errors: {uname:'', pwd:'', email:''}});\r\n\r\n    const [errorMessage, setErrorMessage] = useState(\"\");\r\n    const [successMessage, setSuccessMessage] = useState(\"\");\r\n\r\n    const emailRegex = RegExp(/\\S+@\\S+\\.\\S+/);\r\n\r\n    let timerId;\r\n\r\n    const isformValid = (errors) => {\r\n         let valid = true;\r\n\r\n         Object.values(errors).forEach(val=>{\r\n             val.length > 0 && (valid = false);\r\n         });\r\n\r\n         return valid;\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if(state.userName && state.password && isformValid(state.errors)){\r\n            setSuccessMessage(\"Validation Successfull\");\r\n            timerId = setTimeout(()=>{\r\n                window.location.replace(\"http://www.tidbit.c.la/\")\r\n            },1000);\r\n            \r\n        }else{\r\n            setErrorMessage(`Form Invalid - please fill all the fields: ${state.errors.uname} ${state.errors.pwd} ${state.errors.email}`)\r\n        }\r\n    };\r\n\r\n    useEffect(()=>{\r\n       return function(){\r\n           clearTimeout(timerId)\r\n       }\r\n    },[]);\r\n\r\n    const handleChange = e => {\r\n\r\n        e.preventDefault();\r\n\r\n        const {name, value} = e.target;\r\n\r\n        let errors = state.errors;\r\n\r\n        switch(name){\r\n            case 'username':\r\n                errors.uname = value.length < 3 && value.length > 0 ? 'Username requires minimum 3 characters -' : \"\";\r\n                break;\r\n            case 'password':\r\n                if(value.length < 8 && value.length > 0){\r\n                    errors.pwd = \"password should be minimum 8 characters long \"\r\n                }else if(!(/\\d/.test(value))){\r\n                    errors.pwd = \"Password must have a number in it \"\r\n                }else if(!(/[`!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?~]/.test(value))){\r\n                    errors.pwd = \"Password must have a special character \"\r\n                }else{\r\n                    errors.pwd = \"\";\r\n                }\r\n                break;\r\n            case 'email':\r\n                  errors.email = value.length > 0 && emailRegex.test(value) ? \"\" : \"Invalid email address -\";\r\n                break;\r\n            default:\r\n                break;\r\n         }\r\n\r\n         setState(prevState=>({\r\n             ...prevState,\r\n             errors: errors\r\n         }));\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <h1 style={{textAlign:'center'}}>Mytidbit Form Validation</h1>\r\n            <div className=\"main1\">\r\n                <p style={{color:'red', fontWeight: 'bold', textAlign:\"center\"}}>{errorMessage ? errorMessage : successMessage}</p>\r\n                <form onSubmit={handleSubmit} noValidate>\r\n                    <label>Username:</label>\r\n                    <input type=\"text\" className=\"name1\" name=\"username\" placeholder=\"Enter your name..\" onChange={handleChange} noValidate />\r\n\r\n                    <label>Email:</label>\r\n                    <input type=\"email\" className=\"name1\" name=\"email\" placeholder=\"Enter your name..\" onChange={handleChange} noValidate />\r\n\r\n                    <label>Password:</label>\r\n                    <input type=\"password\" className=\"name1\" name=\"password\" placeholder=\"Enter your last name..\" onChange={handleChange} noValidate />\r\n\r\n                    <label>Country</label>\r\n                    <select id=\"country\" name=\"country\">\r\n                        <option value=\"india\">India</option>\r\n                        <option value=\"singapore\">Singapore</option>\r\n                        <option value=\"germany\">Germany</option>\r\n                        <option value=\"canada\">Canada</option>\r\n                        <option value=\"usa\">USA</option>\r\n                    </select>\r\n\r\n                    <input type=\"submit\" className=\"submitt\" value=\"Submit\" />\r\n                </form>\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default FormValidation;\r\n"],"sourceRoot":""}